<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>FX3Connection Methods</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="FX3Connection class, methods" /><meta name="Microsoft.Help.Id" content="Methods.T:FX3Api.FX3Connection" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="FX3Api" /><meta name="file" content="cb93209d-541f-8e98-d3b9-bbfba5e489e2" /><meta name="guid" content="cb93209d-541f-8e98-d3b9-bbfba5e489e2" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Analog Devices iSensor FX3 API Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/d75eb659-6335-53f6-af7a-81814a21ab7f.htm" title="Analog Devices iSensor FX3 API Documentation" tocid="roottoc">Analog Devices iSensor FX3 API Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/d75eb659-6335-53f6-af7a-81814a21ab7f.htm" title="Namespaces" tocid="d75eb659-6335-53f6-af7a-81814a21ab7f">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/338939de-c7bb-3899-fea8-9b1a456a0a9c.htm" title="FX3Api" tocid="338939de-c7bb-3899-fea8-9b1a456a0a9c">FX3Api</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/8620563f-3f40-5410-ed4b-dfba03527986.htm" title="FX3Connection Class" tocid="8620563f-3f40-5410-ed4b-dfba03527986">FX3Connection Class</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/cb93209d-541f-8e98-d3b9-bbfba5e489e2.htm" title="FX3Connection Methods" tocid="cb93209d-541f-8e98-d3b9-bbfba5e489e2">FX3Connection Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/83e536d1-4099-3451-e532-29f647fec8fc.htm" title="ISpi32Interface.GetBufferedStreamDataPacket Method " tocid="83e536d1-4099-3451-e532-29f647fec8fc">ISpi32Interface.GetBufferedStreamDataPacket Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0cda3979-b0e4-ec44-da38-baabf1ebef74.htm" title="ISpi32Interface.BackgroundWorker) Method " tocid="0cda3979-b0e4-ec44-da38-baabf1ebef74">ISpi32Interface.BackgroundWorker) Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ba5c797a-4c59-39b4-c383-b5602bf0f6b0.htm" title="BitBangReadReg16 Method " tocid="ba5c797a-4c59-39b4-c383-b5602bf0f6b0">BitBangReadReg16 Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/487c4e1e-f9e5-0c79-d7f4-d68770e0a0ee.htm" title="BitBangSpi Method " tocid="487c4e1e-f9e5-0c79-d7f4-d68770e0a0ee">BitBangSpi Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/62a425f0-db94-2159-1733-d340d7551ad6.htm" title="BitBangWriteRegByte Method " tocid="62a425f0-db94-2159-1733-d340d7551ad6">BitBangWriteRegByte Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/36824e9a-6a88-3094-304a-90a377419241.htm" title="BootloaderBlinkLED Method " tocid="36824e9a-6a88-3094-304a-90a377419241">BootloaderBlinkLED Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d8ed82c3-e676-2b11-9f04-2d4f7f73c8b8.htm" title="BootloaderTurnOffLED Method " tocid="d8ed82c3-e676-2b11-9f04-2d4f7f73c8b8">BootloaderTurnOffLED Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5a7529d1-fb20-b1af-c740-b705d3c5af4e.htm" title="BootloaderTurnOnLED Method " tocid="5a7529d1-fb20-b1af-c740-b705d3c5af4e">BootloaderTurnOnLED Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/a1b196c4-9356-0e0d-b5aa-8a706a6de939.htm" title="CancelStreamAsync Method " tocid="a1b196c4-9356-0e0d-b5aa-8a706a6de939">CancelStreamAsync Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0db9153e-9792-111c-4df9-b433ca651157.htm" title="ClearBurstMode Method " tocid="0db9153e-9792-111c-4df9-b433ca651157">ClearBurstMode Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/907f1e92-42a0-60b7-8715-827644937de7.htm" title="ClearErrorLog Method " tocid="907f1e92-42a0-60b7-8715-827644937de7">ClearErrorLog Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4b6e5cd7-b945-45e2-6275-936e9b9b4a5e.htm" title="Connect Method " tocid="4b6e5cd7-b945-45e2-6275-936e9b9b4a5e">Connect Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/182a2d38-f1c9-0650-8af8-cdc7c789e81b.htm" title="Disconnect Method " tocid="182a2d38-f1c9-0650-8af8-cdc7c789e81b">Disconnect Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2ffc4023-b4c8-1c27-15c2-f34ecdcec13e.htm" title="FX3CodeRunningOnTarget Method " tocid="2ffc4023-b4c8-1c27-15c2-f34ecdcec13e">FX3CodeRunningOnTarget Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/75e7752d-96ab-fd21-d7a0-7cdbb57c32aa.htm" title="GetBuffer Method " tocid="75e7752d-96ab-fd21-d7a0-7cdbb57c32aa">GetBuffer Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/446de784-a2ef-34e7-894b-eef207deea21.htm" title="GetBufferedStreamDataPacket Method " tocid="446de784-a2ef-34e7-894b-eef207deea21">GetBufferedStreamDataPacket Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b4fab9a9-e4a3-90a0-a8e0-4672c3d2ad8f.htm" title="GetErrorLog Method " tocid="b4fab9a9-e4a3-90a0-a8e0-4672c3d2ad8f">GetErrorLog Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/869a5b14-0f8e-d79e-4834-b1fb64f07673.htm" title="GetErrorLogCount Method " tocid="869a5b14-0f8e-d79e-4834-b1fb64f07673">GetErrorLogCount Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/aa792fcd-93a8-db57-939c-90268513bd69.htm" title="GetI2CBuffer Method " tocid="aa792fcd-93a8-db57-939c-90268513bd69">GetI2CBuffer Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/dc3151b3-bdff-ae79-87df-171b9403b17f.htm" title="GetPinPWMInfo Method " tocid="dc3151b3-bdff-ae79-87df-171b9403b17f">GetPinPWMInfo Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c6a66559-824f-4fbf-0fa6-8aa54f486d13.htm" title="GetStreamDataPacketU16 Method " tocid="c6a66559-824f-4fbf-0fa6-8aa54f486d13">GetStreamDataPacketU16 Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c93809d2-b137-b4b8-1ae5-fd95d7a347af.htm" title="GetTimerValue Method " tocid="c93809d2-b137-b4b8-1ae5-fd95d7a347af">GetTimerValue Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ea954d82-dae6-dc07-14b2-2d6bd5a20208.htm" title="I2CReadBytes Method " tocid="ea954d82-dae6-dc07-14b2-2d6bd5a20208">I2CReadBytes Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/3bdb9b89-7f53-1c6a-bdc7-d92e0b3bf335.htm" title="I2CWriteBytes Method " tocid="3bdb9b89-7f53-1c6a-bdc7-d92e0b3bf335">I2CWriteBytes Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/52a3102f-a983-352b-9eb6-7477399b0856.htm" title="ISpi32StopStream Method " tocid="52a3102f-a983-352b-9eb6-7477399b0856">ISpi32StopStream Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/fe7d19f7-40da-11f1-de8d-42c07116628f.htm" title="isPWMPin Method " tocid="fe7d19f7-40da-11f1-de8d-42c07116628f">isPWMPin Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/b416fddf-98f9-01ef-1d88-f71bce9cf5e2.htm" title="MeasureBusyPulse Method " tocid="b416fddf-98f9-01ef-1d88-f71bce9cf5e2">MeasureBusyPulse Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/a3e67348-5853-6f1c-97d8-3e79b9328142.htm" title="MeasurePinDelay Method " tocid="a3e67348-5853-6f1c-97d8-3e79b9328142">MeasurePinDelay Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/3aa1bf05-a720-4f7e-df82-790e8b584f4f.htm" title="MeasurePinFreq Method " tocid="3aa1bf05-a720-4f7e-df82-790e8b584f4f">MeasurePinFreq Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/80d24cdc-deef-3180-0111-e36fa9384cf1.htm" title="PulseDrive Method " tocid="80d24cdc-deef-3180-0111-e36fa9384cf1">PulseDrive Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/031dbd3e-7143-bcaf-b813-5366bd1ba351.htm" title="PulseWait Method " tocid="031dbd3e-7143-bcaf-b813-5366bd1ba351">PulseWait Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0744f798-2a6a-c364-49c1-0bd96c885021.htm" title="PurgeBadFrameData Method " tocid="0744f798-2a6a-c364-49c1-0bd96c885021">PurgeBadFrameData Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/6457666b-d132-487d-9a96-099ef097ac44.htm" title="ReadDRFreq Method " tocid="6457666b-d132-487d-9a96-099ef097ac44">ReadDRFreq Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b678319c-6f9b-b788-4ff1-e925d0bda34f.htm" title="ReadFlash Method " tocid="b678319c-6f9b-b788-4ff1-e925d0bda34f">ReadFlash Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/661afed3-df1d-d1f6-9f84-83c93b07a1cb.htm" title="ReadPin Method " tocid="661afed3-df1d-d1f6-9f84-83c93b07a1cb">ReadPin Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/fe783061-d1ca-42e1-0f81-3783f8f6aa4b.htm" title="ReadPins Method " tocid="fe783061-d1ca-42e1-0f81-3783f8f6aa4b">ReadPins Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/5f6f63a6-0281-d578-63bf-2d1d9f93f29a.htm" title="ReadRegArray Method " tocid="5f6f63a6-0281-d578-63bf-2d1d9f93f29a">ReadRegArray Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/5f4099f1-a22e-7257-7034-83f18f8b8188.htm" title="ReadRegArrayStream Method " tocid="5f4099f1-a22e-7257-7034-83f18f8b8188">ReadRegArrayStream Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e6c7ea43-7db8-57b0-7984-fab0365ca1b7.htm" title="ReadRegByte Method " tocid="e6c7ea43-7db8-57b0-7984-fab0365ca1b7">ReadRegByte Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c135dd0d-5bf8-9202-e795-6b3fb09b9809.htm" title="ReadRegWord Method " tocid="c135dd0d-5bf8-9202-e795-6b3fb09b9809">ReadRegWord Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/a8a69a90-583a-e20c-c8c6-4d143f6f5737.htm" title="ReadTime Method " tocid="a8a69a90-583a-e20c-c8c6-4d143f6f5737">ReadTime Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f0bff5d7-785a-008d-08eb-9f7aaa2992b5.htm" title="Reset Method " tocid="f0bff5d7-785a-008d-08eb-9f7aaa2992b5">Reset Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4c19ef3f-5883-86b8-38cc-ddcf1ec14044.htm" title="ResetAllFX3s Method " tocid="4c19ef3f-5883-86b8-38cc-ddcf1ec14044">ResetAllFX3s Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7bffc307-014c-a89b-8d5c-9978358c74bb.htm" title="RestoreHardwareSpi Method " tocid="7bffc307-014c-a89b-8d5c-9978358c74bb">RestoreHardwareSpi Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/0827146d-d21a-6502-c57a-bf27a387aab1.htm" title="SetBitBangSpiFreq Method " tocid="0827146d-d21a-6502-c57a-bf27a387aab1">SetBitBangSpiFreq Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/56f4fec7-eb04-322b-49e9-b544d201b9ea.htm" title="SetBitBangStallTime Method " tocid="56f4fec7-eb04-322b-49e9-b544d201b9ea">SetBitBangStallTime Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/7c878496-b143-52d3-657e-ac23ead892db.htm" title="SetPin Method " tocid="7c878496-b143-52d3-657e-ac23ead892db">SetPin Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/dd796022-2abc-efad-5a3e-4e7b657c01bb.htm" title="SetPinResistorSetting Method " tocid="dd796022-2abc-efad-5a3e-4e7b657c01bb">SetPinResistorSetting Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/464bda3e-6bf3-722c-dab0-7e60d8597bff.htm" title="SetupBurstMode Method " tocid="464bda3e-6bf3-722c-dab0-7e60d8597bff">SetupBurstMode Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/dc818414-2c3c-b7d8-acf4-aa6a3bc9cebd.htm" title="Start Method " tocid="dc818414-2c3c-b7d8-acf4-aa6a3bc9cebd">Start Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/0cf0c7de-122c-a8dc-d8b2-6ab037124a13.htm" title="StartBufferedStream Method " tocid="0cf0c7de-122c-a8dc-d8b2-6ab037124a13">StartBufferedStream Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b14aca4a-b866-baab-6f17-52b7a04f7b0c.htm" title="StartBurstStream Method " tocid="b14aca4a-b866-baab-6f17-52b7a04f7b0c">StartBurstStream Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/861e5663-3039-cbca-2e1d-33865390bba2.htm" title="StartGenericStream Method " tocid="861e5663-3039-cbca-2e1d-33865390bba2">StartGenericStream Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b4d3ea2f-4daa-ed76-8ace-a17c1ef8da5a.htm" title="StartI2CStream Method " tocid="b4d3ea2f-4daa-ed76-8ace-a17c1ef8da5a">StartI2CStream Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/8358c89e-ed27-5b1d-0622-6b5b8f5e7a17.htm" title="StartPWM Method " tocid="8358c89e-ed27-5b1d-0622-6b5b8f5e7a17">StartPWM Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2edcb204-8c49-d289-b966-ae0616c3519c.htm" title="StartRealTimeStreaming Method " tocid="2edcb204-8c49-d289-b966-ae0616c3519c">StartRealTimeStreaming Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d20424b6-ec7c-f4ce-6c15-1ad377a54a18.htm" title="StartStream Method " tocid="d20424b6-ec7c-f4ce-6c15-1ad377a54a18">StartStream Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e986b4a1-c3c5-b184-a03e-35dbacc81e05.htm" title="StopPWM Method " tocid="e986b4a1-c3c5-b184-a03e-35dbacc81e05">StopPWM Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c2c1b045-c7b9-563c-c316-d8d9827c26f1.htm" title="StopRealTimeStreaming Method " tocid="c2c1b045-c7b9-563c-c316-d8d9827c26f1">StopRealTimeStreaming Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/47cb4928-2637-9c27-ed27-d149550fe939.htm" title="StopStream Method " tocid="47cb4928-2637-9c27-ed27-d149550fe939">StopStream Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0cfc934b-2eab-4327-e5f7-1f7e45438ab7.htm" title="Transfer Method " tocid="0cfc934b-2eab-4327-e5f7-1f7e45438ab7">Transfer Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/46557991-be3a-f991-c36f-d895ea7771ef.htm" title="TransferArray Method " tocid="46557991-be3a-f991-c36f-d895ea7771ef">TransferArray Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/01886df4-a0c5-b5b2-46d6-9f81a92200c4.htm" title="UserLEDBlink Method " tocid="01886df4-a0c5-b5b2-46d6-9f81a92200c4">UserLEDBlink Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2c7497f7-c6e6-eb82-717b-71cc68e0d450.htm" title="UserLEDOff Method " tocid="2c7497f7-c6e6-eb82-717b-71cc68e0d450">UserLEDOff Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2223357b-5a85-e4ad-6982-b6892ba8a64d.htm" title="UserLEDOn Method " tocid="2223357b-5a85-e4ad-6982-b6892ba8a64d">UserLEDOn Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4e574267-34de-9f80-0cc0-dddf0a93d40d.htm" title="WaitForBoard Method " tocid="4e574267-34de-9f80-0cc0-dddf0a93d40d">WaitForBoard Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/4409394c-b943-ddef-8f45-8843d985cd84.htm" title="WaitForStreamCompletion Method " tocid="4409394c-b943-ddef-8f45-8843d985cd84">WaitForStreamCompletion Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f9111a0c-8350-dffb-dd54-36a0dc26e92b.htm" title="WriteReadTransferArray Method " tocid="f9111a0c-8350-dffb-dd54-36a0dc26e92b">WriteReadTransferArray Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/7470aa78-1dd1-b34f-92bb-eb104bcc74b4.htm" title="WriteRegByte Method " tocid="7470aa78-1dd1-b34f-92bb-eb104bcc74b4">WriteRegByte Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/bd17d83e-656a-fb48-f222-fb658ea122a2.htm" title="WriteRegWord Method " tocid="bd17d83e-656a-fb48-f222-fb658ea122a2">WriteRegWord Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>FX3Connection Methods</h1></td></tr></table><span class="introStyle"></span> <p>The <a href="8620563f-3f40-5410-ed4b-dfba03527986.htm">FX3Connection</a> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID0RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="ba5c797a-4c59-39b4-c383-b5602bf0f6b0.htm">BitBangReadReg16</a></td><td><div class="summary">
 Read a standard iSensors 16-bit register using a bitbang SPI connection
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="487c4e1e-f9e5-0c79-d7f4-d68770e0a0ee.htm">BitBangSpi</a></td><td><div class="summary">
 Perform a bit banged SPI transfer, using the config set in BitBangSpiConfig.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="62a425f0-db94-2159-1733-d340d7551ad6.htm">BitBangWriteRegByte</a></td><td><div class="summary">
 Write a byte to an iSensor register using a bitbang SPI connection
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="36824e9a-6a88-3094-304a-90a377419241.htm">BootloaderBlinkLED</a></td><td><div class="summary">
 BOOTLOADER FW: Blink the on-board LED
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="d8ed82c3-e676-2b11-9f04-2d4f7f73c8b8.htm">BootloaderTurnOffLED</a></td><td><div class="summary">
 BOOTLOADER FW: Turn off the LED
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="5a7529d1-fb20-b1af-c740-b705d3c5af4e.htm">BootloaderTurnOnLED</a></td><td><div class="summary">
 BOOTLOADER FW: Turn on the LED
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="a1b196c4-9356-0e0d-b5aa-8a706a6de939.htm">CancelStreamAsync</a></td><td><div class="summary">
 Cancel a any running stream
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="0db9153e-9792-111c-4df9-b433ca651157.htm">ClearBurstMode</a></td><td><div class="summary">
 Takes interface out of burst mode by setting BurstMode to zero.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="907f1e92-42a0-60b7-8715-827644937de7.htm">ClearErrorLog</a></td><td><div class="summary">
 Clear the error log stored in flash
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="4b6e5cd7-b945-45e2-6275-936e9b9b4a5e.htm">Connect</a></td><td><div class="summary">
 Attempts to program the selected FX3 board with the application firmware. The FX3 board should be programmed
 with the ADI bootloader.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="a1714e7f-2664-172c-b24d-96db264ea09f.htm">Disconnect<span id="LST9068CBC_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_0?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
 This function sends a reset command to the specified FX3 board, or does nothing if no board is connected
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="1f212ee9-b807-773c-907c-2434d2b7dfdb.htm">Disconnect(String)</a></td><td><div class="summary">
 Overload of Disconnect which lets you specify the FX3 serial number to disconnect. Returns a boolean
 indicating if the board was disconnected.
 </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.equals#System_Object_Equals_System_Object_" target="_blank">Equals</a></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.finalize#System_Object_Finalize" target="_blank">Finalize</a></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="2ffc4023-b4c8-1c27-15c2-f34ecdcec13e.htm">FX3CodeRunningOnTarget</a></td><td><div class="summary">
 Function which checks if the FX3 is connected and programmed
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="75e7752d-96ab-fd21-d7a0-7cdbb57c32aa.htm">GetBuffer</a></td><td><div class="summary">
 Gets one frame from the thread safe queue. Waits to return until a frame is available if there is a stream running. If
 there is not a stream running, and there is no data in the queue this call returns "Nothing".
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="446de784-a2ef-34e7-894b-eef207deea21.htm">GetBufferedStreamDataPacket</a></td><td><div class="summary">
 This function returns a single buffered stream packet. Needed for IBufferedStreamProducer
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="b4fab9a9-e4a3-90a0-a8e0-4672c3d2ad8f.htm">GetErrorLog</a></td><td><div class="summary">
 Gets the current error log from FX3 flash memory
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="869a5b14-0f8e-d79e-4834-b1fb64f07673.htm">GetErrorLogCount</a></td><td><div class="summary">
 Get the number of errors logged to the FX3 flash memory
 </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gethashcode#System_Object_GetHashCode" target="_blank">GetHashCode</a></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="aa792fcd-93a8-db57-939c-90268513bd69.htm">GetI2CBuffer</a></td><td><div class="summary">
 Get I2C buffer from I2C read stream
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="dc3151b3-bdff-ae79-87df-171b9403b17f.htm">GetPinPWMInfo</a></td><td><div class="summary">
 Allows the user to retrieve a set of information about the current pin PWM configuration.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="c6a66559-824f-4fbf-0fa6-8aa54f486d13.htm">GetStreamDataPacketU16</a></td><td><div class="summary">
 This function does the same thing as GetBufferedStreamDataPacket()
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="c93809d2-b137-b4b8-1ae5-fd95d7a347af.htm">GetTimerValue</a></td><td><div class="summary">
 This function reads the current value from the 10MHz timer running on the FX3
 </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gettype#System_Object_GetType" target="_blank">GetType</a></td><td><div class="summary">Gets the <a href="https://docs.microsoft.com/dotnet/api/system.type" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="ea954d82-dae6-dc07-14b2-2d6bd5a20208.htm">I2CReadBytes</a></td><td><div class="summary">
 Read bytes from an I2C slave device attached to the FX3.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="3bdb9b89-7f53-1c6a-bdc7-d92e0b3bf335.htm">I2CWriteBytes</a></td><td><div class="summary">
 Write bytes to an I2C slave device attached to the FX3
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="52a3102f-a983-352b-9eb6-7477399b0856.htm">ISpi32StopStream</a></td><td><div class="summary">
 ISpi32 StopStream implementation. Calls generic version.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="fe7d19f7-40da-11f1-de8d-42c07116628f.htm">isPWMPin</a></td><td><div class="summary">
 This function checks to see if the selected pin has already been configured to act as a PWM output pin.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="e5d647f8-db65-c6df-0501-d8891ba7350b.htm">MeasureBusyPulse(<span id="LST9068CBC_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_1?cpp=array&lt;");</script>Byte<span id="LST9068CBC_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_2?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, IPinObject, UInt32, UInt32)</a></td><td><div class="summary">
 Overload of measure busy pulse which triggers the DUT event using a SPI write instead of a pin drive.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="7e13dafb-f06e-23e6-2ed5-5ac36e85ed60.htm">MeasureBusyPulse(IPinObject, UInt32, UInt32, IPinObject, UInt32, UInt32)</a></td><td><div class="summary">
 This function triggers a DUT action using a pulse drive, and then measures the following pulse width on a separate busy line.
 The pulse time on the busy pin is measured using a 10MHz timer with approx. 0.1us accuracy.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="a3e67348-5853-6f1c-97d8-3e79b9328142.htm">MeasurePinDelay</a></td><td><div class="summary">
 This function measures the time delay between toggling a trigger pin, and a state change on the busy pin. This can be used to measure
 the propagation delay between a sync edge and data ready being de-asserted.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="3aa1bf05-a720-4f7e-df82-790e8b584f4f.htm">MeasurePinFreq</a></td><td><div class="summary">
 Measures the frequency of an input signal to the selected pin.
 </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.memberwiseclone#System_Object_MemberwiseClone" target="_blank">MemberwiseClone</a></td><td><div class="summary">Creates a shallow copy of the current <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="80d24cdc-deef-3180-0111-e36fa9384cf1.htm">PulseDrive</a></td><td><div class="summary">
 This function drives a pin to the specified level for a given time interval in ms
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="031dbd3e-7143-bcaf-b813-5366bd1ba351.htm">PulseWait</a></td><td><div class="summary">
 This function waits for a pin to reach a specified level
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="0744f798-2a6a-c364-49c1-0bd96c885021.htm">PurgeBadFrameData</a></td><td><div class="summary">
 This function checks the CRC of each real time streaming frame stored in the Stream Data Queue, 
 and purges the bad ones. This operation is only valid for an ADcmXL series DUT.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="6457666b-d132-487d-9a96-099ef097ac44.htm">ReadDRFreq</a></td><td><div class="summary">
 Reads the measured DR value
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="b678319c-6f9b-b788-4ff1-e925d0bda34f.htm">ReadFlash</a></td><td><div class="summary">
 Read data from the FX3 non-volatile memory
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="661afed3-df1d-d1f6-9f84-83c93b07a1cb.htm">ReadPin</a></td><td><div class="summary">
 Reads the value of a GPIO pin on the FX3
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="40215716-8ec0-b89f-db11-a8113d840adb.htm">ReadPins(<span id="LST9068CBC_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_3?cpp=array&lt;");</script>IPinObject<span id="LST9068CBC_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_4?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
 Reads a list of FX3 GPIO pins. This function calls the overload which takes an IEnumerable
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="1fc2b5e9-f1f8-16e8-9044-29ff745ca157.htm">ReadPins(IEnumerable<span id="LST9068CBC_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>IPinObject<span id="LST9068CBC_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
 Reads a list of FX3 GPIO pins
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f2b89cbf-4012-be1d-f1d5-ac72e7197141.htm">ReadRegArray(IEnumerable<span id="LST9068CBC_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_7?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>UInt32<span id="LST9068CBC_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_8?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
 Reads an array of 16 bit register values.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="2a7ccf97-65d3-222d-9287-d27d230caed5.htm">ReadRegArray(IEnumerable<span id="LST9068CBC_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_9?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>AddrDataPair<span id="LST9068CBC_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, UInt32)</a></td><td><div class="summary">
 ReadRegArray overload which includes register writes. Breaks the call into multiple calls of readRegByte and writeRegByte
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="24116cfa-69f7-4ae9-d55e-3036b7c22ec9.htm">ReadRegArray(IEnumerable<span id="LST9068CBC_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_11?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>UInt32<span id="LST9068CBC_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_12?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, UInt32)</a></td><td><div class="summary">
 Overload of ReadRegArray which builds a new IEnumerable of addr and call the overload which takes an enumerable of addr
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="990c3a73-5898-a35c-4a87-65e8d497e79f.htm">ReadRegArrayStream(IEnumerable<span id="LST9068CBC_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_13?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>AddrDataPair<span id="LST9068CBC_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_14?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, UInt32, UInt32)</a></td><td><div class="summary">
 This is the most generic array register function. All other array read/write functions call down to this one.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="9263c760-5a97-0024-8c57-29448e7f0ecf.htm">ReadRegArrayStream(IEnumerable<span id="LST9068CBC_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_15?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>UInt32<span id="LST9068CBC_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_16?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, UInt32, UInt32)</a></td><td><div class="summary" /></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="e6c7ea43-7db8-57b0-7984-fab0365ca1b7.htm">ReadRegByte</a></td><td><div class="summary">
 This is the most general ReadRegByte. Other implementations are based on this.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="c135dd0d-5bf8-9202-e795-6b3fb09b9809.htm">ReadRegWord</a></td><td><div class="summary">
 Reads a single 16 bit register on the DUT
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="a8a69a90-583a-e20c-c8c6-4d143f6f5737.htm">ReadTime</a></td><td><div class="summary">
 Not implemented
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f0bff5d7-785a-008d-08eb-9f7aaa2992b5.htm">Reset</a></td><td><div class="summary">
 Drives the Reset pin low for 10ms, sleeps for 100ms, and then blocks until the ReadyPin is high (500ms timeout)
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="4c19ef3f-5883-86b8-38cc-ddcf1ec14044.htm">ResetAllFX3s</a></td><td><div class="summary">
 Looks for and resets boards in application mode. Should only be called at program start, after InitBoardList()
 Note: Should not be used if running multiple instances of the GUI.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="7bffc307-014c-a89b-8d5c-9978358c74bb.htm">RestoreHardwareSpi</a></td><td><div class="summary">
 Resets the hardware SPI pins to their default operating mode. Can be used to recover the SPI functionality after a bit-bang SPI transaction over the hardware SPI pins
 without having to reboot the FX3.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="a0b0d20e-e383-ae04-0367-3caa0c1a00d6.htm">SetBitBangSpiFreq(Double)</a></td><td><div class="summary">
 Sets the SCLK frequency for a bit bang SPI connection. 
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="75e483c4-f7e1-64f0-0253-f01d4a460f16.htm">SetBitBangSpiFreq(UInt32)</a></td><td><div class="summary">
 Set the SCLK frequency for a bit banged SPI connection. Overloaded to allow for a UInt
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="56f4fec7-eb04-322b-49e9-b544d201b9ea.htm">SetBitBangStallTime</a></td><td><div class="summary">
 Set the bit bang SPI stall time. Driven by a clock with resolution of 49.3ns
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="7c878496-b143-52d3-657e-ac23ead892db.htm">SetPin</a></td><td><div class="summary">
 Sets the value of a FX3 GPIO pin. This value will persist until the pin is set to a different value, or read from
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="dd796022-2abc-efad-5a3e-4e7b657c01bb.htm">SetPinResistorSetting</a></td><td><div class="summary">
 Set the FX3 GPIO input stage pull up or pull down resistor setting. All FX3 GPIOs have a software configurable
 pull up / pull down resistor (10KOhm).
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="464bda3e-6bf3-722c-dab0-7e60d8597bff.htm">SetupBurstMode</a></td><td><div class="summary">
 Puts interface into burst mode by setting burstMode to match word count.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="dc818414-2c3c-b7d8-acf4-aa6a3bc9cebd.htm">Start</a></td><td><div class="summary">
 This function is not currently implemented. Calling it will throw a NotImplementedException.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="71615ff4-5c08-774b-c3a3-da1690af6376.htm">StartBufferedStream(IEnumerable<span id="LST9068CBC_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_17?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>AddrDataPair<span id="LST9068CBC_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_18?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, UInt32, UInt32, Int32, BackgroundWorker)</a></td><td><div class="summary">
 Starts a buffered stream operation. This is usually called from the TextFileStreamManager. DUTType must be set before executing. 
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="c9950b91-239e-76ad-66fb-4b19d3c7ebdb.htm">StartBufferedStream(IEnumerable<span id="LST9068CBC_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_19?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>UInt32<span id="LST9068CBC_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_20?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, UInt32, UInt32, Int32, BackgroundWorker)</a></td><td><div class="summary">
 Starts a buffered stream operation. The registers listed in addr are read numCaptures times per register buffer. This process is repeated numBuffers times. 
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="b14aca4a-b866-baab-6f17-52b7a04f7b0c.htm">StartBurstStream</a></td><td><div class="summary">
 Function to start a burst read using the BurstStreamManager
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="861e5663-3039-cbca-2e1d-33865390bba2.htm">StartGenericStream</a></td><td><div class="summary">
 Starts a generic data stream. This allows you to read/write a set of registers on the DUT, triggering off the data ready if needed.
 The data read is placed in the thread-safe queue and can be retrieved with a call to GetBuffer. Each "buffer" is the result of
 reading the addr list of registers numCaptures times. For example, if addr is set to [0, 2, 4] and numCaptures is set to 10, each
 buffer will contain the 30 register values. The total number of register reads performed is numCaptures * numBuffers
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="b4d3ea2f-4daa-ed76-8ace-a17c1ef8da5a.htm">StartI2CStream</a></td><td><div class="summary">
 Start an asynchronous I2C read stream. This stream runs on the stream thread
 and places all data in a thread safe queue. The data can be retrieved using
 GetI2CBuffer()
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="8358c89e-ed27-5b1d-0622-6b5b8f5e7a17.htm">StartPWM</a></td><td><div class="summary">
 This function configures the selected pin to drive a pulse width modulated output.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="2edcb204-8c49-d289-b966-ae0616c3519c.htm">StartRealTimeStreaming</a></td><td><div class="summary">
 This function starts real time streaming on the ADcmXLx021 (interface and FX3). Specifying pin exit is optional and must be 0 (disabled) or 1 (enabled)
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="d20424b6-ec7c-f4ce-6c15-1ad377a54a18.htm">StartStream</a></td><td><div class="summary">
 Starts a buffered stream for only a single buffer. 
 This is equivalent to StartBufferedStream(addr, numCaptures, 1, CurrentTimeout, Nothing)
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="e986b4a1-c3c5-b184-a03e-35dbacc81e05.htm">StopPWM</a></td><td><div class="summary">
 This function call disables the PWM output from the FX3 and returns the pin to a tri-stated mode.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="c2c1b045-c7b9-563c-c316-d8d9827c26f1.htm">StopRealTimeStreaming</a></td><td><div class="summary">
 This function stops real time streaming on the ADcmXLx021 (stream thread in FX3 API and FX3 firmware)
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="47cb4928-2637-9c27-ed27-d149550fe939.htm">StopStream</a></td><td><div class="summary">
 Stops the currently running data stream, if any.
 </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.tostring#System_Object_ToString" target="_blank">ToString</a></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="0cfc934b-2eab-4327-e5f7-1f7e45438ab7.htm">Transfer</a></td><td><div class="summary">
 This function performs a single bi-directional 32 bit SPI transaction. If DrActive is set to false the transfer is performed asynchronously. If DrActive is set to true, 
 the transfer should wait until a data ready condition (determined by DrPin and DrPolarity) is true.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="dc77f6c9-55f9-4f89-8b67-bde2853f30f2.htm">TransferArray(IEnumerable<span id="LST9068CBC_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_21?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>UInt32<span id="LST9068CBC_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_22?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
 This function performs an array bi-directional SPI transfer. WriteData.Count() total SPI transfers are performed. If DrActive is set to true, the transfer should wait
 until a data ready condition (determined by DrPin and DrPolarity) is true, and then perform all SPI transfers. If DrActive is false it is performed asynchronously.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="7766b49c-6420-e626-5263-9731005347fe.htm">TransferArray(IEnumerable<span id="LST9068CBC_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_23?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>UInt32<span id="LST9068CBC_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_24?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, UInt32)</a></td><td><div class="summary">
 This function performs an array bi-directional SPI transfer. This overload transfers all the data in WriteData numCaptures times. The total
 number of SPI words transfered is WriteData.Count() * numCaptures.
 If DrActive is set to true, the transfer should wait until a data ready condition (determined by DrPin and DrPolarity) is true, and
 then perform all SPI transfers. If DrActive is false it is performed asynchronously.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="18232515-7333-a5a2-063b-02223610fd44.htm">TransferArray(IEnumerable<span id="LST9068CBC_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_25?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>UInt32<span id="LST9068CBC_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_26?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, UInt32, UInt32)</a></td><td><div class="summary">
 This function performs an array bi-directional SPI transfer. If DrActive is set to true, this overload transfers all the data in WriteData
 numCaptures times per data ready condition being met. It captures data from numBuffers data ready signals. If DrActive is set to false, all the
 transfers are performed asynchronously. The total number of SPI transfers is WriteData.Count()*numCaptures*numBuffers.
 
 The following pseduo-code snippet would perform 400 total SPI transfers, across 100 data ready conditions. 
 
 MOSI = {0x1234, 0x5678}
 myISpi32.DrActive = True
 MISO = myISpi32.TransferArray(MOSI, 2, 100)
 
 During the transfers, the SPI bus would look like the following:
 
 MOSI: ---(0x1234)---(0x5678)---(0x1234)---(0x5678)-----------------(0x1234)---(0x5678)---(0x1234)---(0x5678)--...-----(0x1234)-----(0x5678)-----(0x1234)-----(0x5678)--
 MISO:----MISO(0)----MISO(1)----MISO(2)----MISO(3)------------------MISO(4)----MISO(5)----MISO(6)----MISO(7)---...-----MISO(196)----MISO(197)----MISO(198)----MISO(199)-
 DR:   ___|¯¯¯|_____________________________________________________|¯¯¯|______________________________________..._____|¯¯¯|____________________________________________
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="01886df4-a0c5-b5b2-46d6-9f81a92200c4.htm">UserLEDBlink</a></td><td><div class="summary">
 Blink user LED using timer hardware (not available on Cypress Explorer FX3 board)
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="2c7497f7-c6e6-eb82-717b-71cc68e0d450.htm">UserLEDOff</a></td><td><div class="summary">
 Turn off user LED (not available on Cypress Explorer FX3 board)
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="2223357b-5a85-e4ad-6982-b6892ba8a64d.htm">UserLEDOn</a></td><td><div class="summary">
 Turn on user LED (not available on Cypress Explorer FX3 board)
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="4e574267-34de-9f80-0cc0-dddf0a93d40d.htm">WaitForBoard</a></td><td><div class="summary">
 This function is used to wait for an FX3 to be programmed with the ADI bootloader. In general, the programming model would go as follows,
 to connect and program the first board attached:
 
 Dim myFX3 as FX3Connection = New FX3Connection(firmwarepath, bootloaderpath, devicetype)
 If Not myFX3.WaitForBoard(10) Then
     Msgbox("No boards found")
     Exit Sub
 End If
 myFX3.Connect(myFX3.AvailableFX3s(0))
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="e8985c55-3115-9956-a569-a1b680dc31c2.htm">WaitForStreamCompletion<span id="LST9068CBC_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_27?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
 Overload of WaitForStreamCompletion which blocks indefinitely
 until a stream completion event is seen.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="1a4276f2-4516-b85e-f049-0f1e3c86c872.htm">WaitForStreamCompletion(Int32)</a></td><td><div class="summary">
 Blocks until the streaming endpoint mutex can be acquired. Allows a user to synchronize external application
 the completion of a stream. Returns false if there is not a stream running, or if the timeout is reached without
 the stream mutex being acquired.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f9111a0c-8350-dffb-dd54-36a0dc26e92b.htm">WriteReadTransferArray</a></td><td><div class="summary">
 Array transfer which performs an initial SPI transmit (MOSI only, no read back) then
 starts a read stream. This is useful if you need to issue a write to the DUT, then 
 immediately start reading back data, without the USB transfer overhead of approx 150us
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="90de83a6-7190-4e44-dea8-e60390a4cf91.htm">WriteRegByte(AddrDataPair)</a></td><td><div class="summary">
 This function writes a single register byte, given as an Address / Data pair
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="8580e64a-9072-7d5e-ea51-213fd75408ee.htm">WriteRegByte(IEnumerable<span id="LST9068CBC_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_28?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>AddrDataPair<span id="LST9068CBC_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_29?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
 This function writes an enumerable list of data to the DUT as AddrDataPairs
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="6dce60eb-8389-b809-5e83-fcb62f45c990.htm">WriteRegByte(IEnumerable<span id="LST9068CBC_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_30?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>UInt32<span id="LST9068CBC_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_31?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IEnumerable<span id="LST9068CBC_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_32?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>UInt32<span id="LST9068CBC_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9068CBC_33?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
 Overload of WriteRegByte which allows for multiple registers to be specified to write to, as an IEnumerable list of register addresses.
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f8766307-1396-1e4d-ecce-d8fa7fc91663.htm">WriteRegByte(UInt32, UInt32)</a></td><td><div class="summary">
 This is the most general WriteRegByte, which the others are based on
 </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="bd17d83e-656a-fb48-f222-fb658ea122a2.htm">WriteRegWord</a></td><td><div class="summary">
 This function is not currently implemented. Calling it will throw a NotImplementedException.
 </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Explicit Interface Implementations</span></div><div id="ID1RBSection" class="collapsibleSection"><table class="members" id="explicitInterfaceImplementationList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="explicit;declared;notNetfw;"><td><img src="../icons/pubinterface.gif" alt="Explicit interface implementation" title="Explicit interface implementation" /><img src="../icons/privmethod.gif" alt="Private method" title="Private method" /></td><td><a href="83e536d1-4099-3451-e532-29f647fec8fc.htm">ISpi32Interface.GetBufferedStreamDataPacket</a></td><td /></tr><tr data="explicit;declared;notNetfw;"><td><img src="../icons/pubinterface.gif" alt="Explicit interface implementation" title="Explicit interface implementation" /><img src="../icons/privmethod.gif" alt="Private method" title="Private method" /></td><td><a href="0cda3979-b0e4-ec44-da38-baabf1ebef74.htm">ISpi32Interface.StartBufferedStream</a></td><td /></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID2RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="8620563f-3f40-5410-ed4b-dfba03527986.htm">FX3Connection Class</a></div><div class="seeAlsoStyle"><a href="338939de-c7bb-3899-fea8-9b1a456a0a9c.htm">FX3Api Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="https://github.com/juchong/iSensor-FX3-API/blob/master/LICENSE" target="_blank">Copyright 2018 - 2020, Analog Devices Inc.</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:alex.nolan%40analog.com?Subject=Analog%20Devices%20iSensor%20FX3%20API%20Documentation">Analog Devices iSensor Group</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>